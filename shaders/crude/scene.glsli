
#ifndef CRUDE_SCENE_GLSL
#define CRUDE_SCENE_GLSL

struct crude_mesh_draw
{
  uvec4                                                    textures;
  vec4                                                     emissive;
  vec4                                                     albedo_color_factor;
  vec4                                                     metallic_roughness_occlusion_factor;

  uint                                                     flags;
  float                                                    alpha_cutoff;
  uint                                                     vertices_offset;
  uint                                                     mesh_index;

  uint                                                     meshletes_offset;
  uint                                                     meshletes_count;
  uint                                                     meshletes_index_count;
  uint                                                     padding1;
};

struct crude_mesh_instance_draw
{
  mat4                                                     model_to_world;
  uint                                                     mesh_draw_index;
  vec3                                                     padding1;
};

struct crude_camera
{
  mat4                                                     world_to_clip;
  mat4                                                     world_to_view;
  mat4                                                     view_to_clip;
  mat4                                                     clip_to_view;
  mat4                                                     view_to_world;
  mat4                                                     clip_to_world;
  vec4                                                     frustum_planes_culling[ 6 ];
  vec3                                                     position;
  float                                                    padding1;
  float                                                    znear;
  float                                                    zfar;
  vec2                                                     padding2;
};

layout(set=CRUDE_MATERIAL_SET, binding=0, row_major, std140) uniform CrudeSceneConstant
{
  crude_camera                                             camera;
  crude_camera                                             camera_debug;
  crude_camera                                             camera_previous;
  crude_camera                                             camera_debug_previous;
  vec2                                                     resolution;
  uint                                                     scene_flags;
  uint                                                     padding5;
};

layout(set=CRUDE_MATERIAL_SET, binding=1, row_major, std430) readonly buffer CrudeMeshDraws
{
  crude_mesh_draw                                          mesh_draws[];
};

layout(set=CRUDE_MATERIAL_SET, binding=2, row_major, std430) readonly buffer CrudeMeshInstancesDraws
{
  crude_mesh_instance_draw                                 mesh_instance_draws[];
};

layout(set=CRUDE_MATERIAL_SET, binding=3, row_major, std430) readonly buffer CrudeMeshBounds
{
  vec4                                                     mesh_bounds[];
};

bool crude_camera_debug_culling()
{
  return ( scene_flags & 1 ) == 1;
}

bool crude_camera_debug_view()
{
  return ( scene_flags & 2 ) == 2;
}

#endif /* CRUDE_SCENE_GLSL */
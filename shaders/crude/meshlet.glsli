
#ifndef CRUDE_MESHLET_GLSL
#define CRUDE_MESHLET_GLSL

#extension GL_EXT_shader_16bit_storage: require
#extension GL_EXT_shader_8bit_storage: require
#extension GL_ARB_shader_draw_parameters : require
#extension GL_KHR_shader_subgroup_ballot: require

struct crude_meshlet
{
  vec3                                                     center;
  float                                                    radius;
  int8_t                                                   cone_axis[ 3 ];
  int8_t                                                   cone_cutoff;
  uint                                                     vertices_offset;
  uint                                                     triangles_offset;
  uint8_t                                                  vertices_count;
  uint8_t                                                  triangles_count;
  uint                                                     mesh_index;
};

struct crude_vertex
{
  vec3                                                     position;
  float                                                    padding1;
  uint8_t                                                  nx, ny, nz, nw;
  uint8_t                                                  tx, ty, tz, tw;
  float16_t                                                tu, tv;
  float                                                    padding2;
};

layout(set=CRUDE_MATERIAL_SET, binding=5) readonly buffer Meshlets
{
  crude_meshlet                                            meshlets[];
};

layout(set=CRUDE_MATERIAL_SET, binding=6) readonly buffer Vertices
{
  crude_vertex                                             vertices[];
};

layout(set=CRUDE_MATERIAL_SET, binding=7) readonly buffer TrianglesIndices
{
  uint8_t                                                  triangles_indices[];
};

layout(set=CRUDE_MATERIAL_SET, binding=8) readonly buffer VerticesIndices
{
  uint                                                     vertices_indices[];
};

#endif /* MESHLET */